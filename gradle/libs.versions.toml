## Generated by $ ./gradlew refreshVersionsCatalog

[bundles]

kotlinx-coroutines = ["kotlinx-coroutines-core", "kotlinx-coroutines-jdk", "kotlinx-coroutines-swing"]
icons = ["jetbrains-compose-material-icons-core", "jetbrains-compose-material-icons-extended"]
kostra = ["kostra-common", "kostra-compose"]
ktor = ["ktor-client-core", "ktor-client-logging", "ktor-client-okhttp", "ktor-client-websockets", "ktor-client-clientcontentneg", "ktor-json"]
unittests-jvm = ["kotlinx-coroutines-test", "junit-jupiter-api", "junit-jupiter-engine", "junit-jupiter-params", "kotlin-reflection", "slf4j", "mockk", "truth", "turbine"]

[plugins]

[versions]
jvmtarget = "17"
jetbrains-compose-ui = "1.6.0"
junit = "5.10.2"
koin = "3.5.3"
kostra = "0.1.3"
kotlin = "1.9.22"
kotlinx-coroutines = "1.8.0"
kotlinx-datetime = "0.5.0"
kotlinx-serialization = "1.6.3"
ktor = "2.3.9"
logback = "1.5.3"
mockk = "1.13.10"
ooxml = "5.2.5"
slf4j = "2.0.12"
truth = "1.4.2"
turbine = "1.1.0"

[libraries]

jetbrains-compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "jetbrains-compose-ui" }
jetbrains-compose-material-icons-core = { module = "org.jetbrains.compose.material:material-icons-core-desktop", version.ref = "jetbrains-compose-ui" }
jetbrains-compose-material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended-desktop", version.ref = "jetbrains-compose-ui" }
jetbrains-compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "jetbrains-compose-ui" }
jetbrains-compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "jetbrains-compose-ui" }
jetbrains-compose-ui-tooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "jetbrains-compose-ui" }
jetbrains-compose-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "jetbrains-compose-ui" }
jetbrains-compose-ui-util = { module = "org.jetbrains.compose.ui:ui-util", version.ref = "jetbrains-compose-ui" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
kostra-common = { module = "com.github.jbruchanov.kostra:kostra-common", version.ref = "kostra" }
kostra-compose = { module = "com.github.jbruchanov.kostra:kostra-compose", version.ref = "kostra" }
kotlin-reflection = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-jdk = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-clientcontentneg = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
ooxml = { module = "org.apache.poi:poi-ooxml", version.ref = "ooxml" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
